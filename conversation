#!/bin/bash

# The chat file
file="$1"

# Show as many lines as they fit in the screen
size=$(tput lines)

# If size is undefined, default to 20
echo Lines should be: $size
if [ -z "$size" ]; then
    size=12
fi

# Will show higger lines/older messages, stored in a tmp file for global access
upread_file=$(mktemp)
echo 1 > $upread_file

# Mods
insecure=0

function refresh() {
    clear
    
    # Read and show the chat
    if [ -f "$file" ]; then
        upread=$(cat $upread_file)
        let position_bottom=$upread*$size
        
        while read -r line; do
            # Prevent echoing empty lines, should not happen
            if [ -z "$line" ]; then
                continue
            fi

            trailing_new_line_regex="\n$"
            while [[ $line =~ $trailing_new_line_regex ]]; do
                line=${line::-2}
            done

            if [ "$insecure" -eq 1 ]; then
                echo -e $line
            else
                echo -e "$line"
            fi
        done < "$file" | tail -n $position_bottom | head -n $size
    else
        echo "El chat desapareció inesperadamente"
        exit 2
    fi
}

function auto() {
    initial_count=0
    while true; do
        count=$(wc -l < $file)

        if [ $count -gt $initial_count ]; then
            initial_count=$count
            refresh
            if [ $? -eq 2 ]; then break; fi
        fi

        sleep 5
    done
}

function manual() {
    while true; do
        tmux wait REFRESH
        refresh
    done
}

function help() {
    while true; do
        tmux wait SHOW_HELP
        echo "
        exit - Salir del chat
        /up - Subir una página
        /down - Bajar una página
        /top - Ir al principio
        /bottom - Ir al final
        /reaction [n] [emoji] - Reaccionar con un emoji
        /[r/g/c/p][mensaje] - Cambia el color del mensaje
        //[mensaje] - Cambia el color del texto a su color original
        /help - Muestra este mensaje de ayuda
        "
        tmux wait HIDE_HELP
        refresh
    done
}

function up() {
    while true; do
        tmux wait UP

        upread=$(cat $upread_file)
        let space_left=$(wc -l < "$file")-$upread*$size

        if [ $space_left -gt 0 ]; then
            let upread=$upread+1
            echo $upread > $upread_file
            refresh
        fi
    done
}

function down() {
    while true; do
        tmux wait DOWN

        upread=$(cat $upread_file)

        if [ $upread -gt 1 ]; then
            let upread=$upread-1
            echo $upread > $upread_file
            refresh
        fi
    done
}

function top() {
    while true; do
        tmux wait TOP
        let upread=$(wc -l < "$file")/$size+1
        echo $upread > $upread_file
        refresh
    done
}

function bottom() {
    while true; do
        tmux wait BOTTOM
        echo 1 > $upread_file
        refresh
    done
}

auto &
manual &
help &
up &
down &
top &
bottom &

while true; do
    read -n 1 -s key
    if [ "$key" = "/" ]; then
        read -e -i "/" input

        if [ "$input" = "/update" ]; then
            echo -e "Lol, not implemented ;)"
        elif [ "$input" = "/insecure" ]; then
            echo -e "\033[1;31mWARNING:\033[0m Insecure mode allows other people to run commands in your name."
            echo "It can be funny, but also dangerous."
            read -n 1 -p "Press Y to activate, press any other key to cancel " key
            echo
            if [ "$key" = "y" ]; then
                echo -e "Insecure mode \033[1;32mactivated\033[0m. To disable it, exit the chat."
                insecure=1
            else
                echo "Insecure mode cancelled."
            fi
            echo -n "To go back to the chat bar, press Ctrl + B -> J. "
            read -p "Press any key to continue" -n 1 -s key
            refresh
        fi
    else
        break
    fi
done
